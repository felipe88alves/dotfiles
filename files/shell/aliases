# vim:set filetype=bash:
# helix:set-language bash:

# helper function used in other aliases
function _isFunction() {
  local check='declare -F --'
  if [[ "$(ps -p "$$" -o comm=)" == *"zsh" ]]; then
    check='print -l ${(ok)functions[(I)[^_+]*]} | grep -w'
  fi
  [[ "$(eval "$check $1")" == "${1}" ]]
}

# Extra aliases
for f in $HOME/.aliases.d/*; do
  if [ -f "$f" ]; then
    source "$f"
  fi
done

function envgrep() {
  printenv | awk "/${1}/ {print \$1}"
}

# Usage: df -h|awkcol 2 ; replaces: df -h | awk '{print $2}'
function awkcol() {
  local ARGS=( "$@" ); ARGS=( "${ARGS[@]:1}" )
  local first="awk '{print "
  local last="}' $ARGS"
  local fields=""
  local cmd=""
  for i in ${1//,/ }; do
    fields="${fields}\$${i},"
  done
  fields=${fields%%,}
  cmd="${first}${fields}${last}"
  eval $cmd
}

# History
function hgrep() {
  if [ ! -z "$1" ]; then
  (
    echo -e '#ID\t#USER\t#SEQ\t#DATE\t#TIME\t#DURATION\t#COMMAND'
    grep --text "${@}" $_eternal_history_histfile
  ) | column -ts $'\t'
  else
    history
  fi
}

function hbtween() {
  # Example:
  #   hbtween 202203301320 202203301530
  #   hbtween '2022-03-30 13:20' '2022-03-30 15:35' mysql
  local start="$(echo ${1} | tr -d '\- :')"
  local finish="$(echo ${2} | tr -d '\- :')"
  (
    echo -e '#ID\t#USER\t#SEQ\t#DATE\t#TIME\t#DURATION\t#COMMAND'
    gawk -v s=${start} -v f=${finish} 'match($4$5, "([0-9]+)-([0-9]+)-([0-9]+)\s?([0-9]+):([0-9]+)", ary) {D=ary[1] ary[2] ary[3] ary[4] ary[5]; if (D > s && D < f) print}' $_eternal_history_histfile | grep "${3}"
  ) | column -ts $'\t'
}
alias histg='hgrep'


# Colored diffs
if [ -x "$(command -v colordiff)" ]; then
  alias diff='colordiff'
fi

# Diff sorted
# diffs file1 file2 [other diff args, e.g. -y]
function diffs() {
  diff "${@:3}" <(sort "$1") <(sort "$2")
}

function diff-dir() {
  diff -bur "${1}" "${2:-./}" --exclude '.git' | delta -s
  echo "Summary:"
  diff -q "${1}" "${2:-./}"
}

function trim() {
    local trimmed="$1"

    # Strip leading space.
    trimmed="${trimmed## }"
    # Strip trailing space.
    trimmed="${trimmed%% }"

    echo "$trimmed"
}

# Bash calculator.
function calc() {
  bc -l <<< "${1}";
}

# Bash weather app
function wttr() {
  location=${1:-}
  if [[ -z "${location:-}" ]];then {
    curl "wttr.in/Athlone"
  }
  curl "wttr.in/${1}"
}
alias wttr_moon='curl wttr.in/Moon'

# Simplified archive extraction
function extract() {
  if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
  else
    if [ -f "$1" ] ; then
      local nameInLowerCase=$(echo "${1}" | awk '{print tolower($0)}')
      case "$nameInLowerCase" in
        *.tar.bz2)   tar xvjf ./"$1"    ;;
        *.tar.gz)    tar xvzf ./"$1"    ;;
        *.tar.xz)    tar xvJf ./"$1"    ;;
        *.lzma)      unlzma ./"$1"      ;;
        *.bz2)       bunzip2 ./"$1"     ;;
        *.rar)       unrar x -ad ./"$1" ;;
        *.gz)        gunzip ./"$1"      ;;
        *.tar)       tar xvf ./"$1"     ;;
        *.tbz2)      tar xvjf ./"$1"    ;;
        *.tgz)       tar xvzf ./"$1"    ;;
        *.zip)       unzip ./"$1"       ;;
        *.Z)         uncompress ./"$1"  ;;
        *.7z)        7z x ./"$1"        ;;
        *.xz)        unxz ./"$1"        ;;
        *.exe)       cabextract ./"$1"  ;;
        *)           echo "extract: '$1' - unknown archive method" ;;
      esac
    else
      echo "'$1' - file does not exist"
    fi
  fi
}

alias rainbow='for COLOR in {1..255}; do echo -en "\e[38;5;${COLOR}m${COLOR} "; done; echo;'
